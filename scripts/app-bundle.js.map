{"version":3,"sources":["todo.ts","app.ts","environment.ts","main.ts","resources/index.ts"],"names":[],"mappings":";;IAAA;QAGE,cAAmB,WAAmB;YAAnB,gBAAW,GAAX,WAAW,CAAQ;YAFtC,SAAI,GAAG,KAAK,CAAC;QAIb,CAAC;QACH,WAAC;IAAD,CANA,AAMC,IAAA;IANY,oBAAI;;;;;ICEjB;QAAA;YAEE,YAAO,GAAG,UAAU,CAAC;YACrB,UAAK,GAAW,EAAE,CAAC;YACnB,YAAO,GAAG,EAAE,CAAC;QAef,CAAC;QAbC,qBAAO,GAAP;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,WAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YACpB,CAAC;QACH,CAAC;QAED,wBAAU,GAAV,UAAW,IAAI;YACb,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACrC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC9B,CAAC;QACH,CAAC;QACH,UAAC;IAAD,CAnBA,AAmBC,IAAA;IAnBY,kBAAG;;;;;;ICFhB,kBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;ICCI,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAdD,8BAcC;;;;;ICtBD,mBAA0B,MAA8B;IAExD,CAAC;IAFD,8BAEC","file":"app-bundle.js","sourcesContent":["export class Todo {\r\n  done = false;\r\n\r\n  constructor(public description: string) { \r\n      \r\n  }\r\n}","import {Todo} from './todo';\n\nexport class App {\n\n  heading = 'My Tasks';\n  todos: Todo[] = [];\n  newTodo = '';\n\n  addTodo() {\n    if (this.newTodo) {\n      this.todos.push(new Todo(this.newTodo));\n      this.newTodo = '';\n    }\n  }\n\n  removeTodo(todo) {\n    let index = this.todos.indexOf(todo);\n    if (index !== -1) {\n      this.todos.splice(index, 1);\n    }\n  }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}